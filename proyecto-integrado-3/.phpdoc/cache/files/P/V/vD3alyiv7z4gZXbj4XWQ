1687194083
waR3U4bTeM%3A4fb42d8ce62c61593977c6933e0b034e-806b143b4df063b66fa8a4e2237af8ca
s:20204:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjgwNmIxNDNiNGRmMDYzYjY2ZmE4YTRlMjIzN2FmOGNhIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6NDQ6IjM2OTI1NzNkZmRlMWFjM2JhYTQ5MWRmMGQzZWRjNTRjODU2YjIwYjUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6Njg6InN0b3JhZ2UvZnJhbWV3b3JrL3ZpZXdzLzM2OTI1NzNkZmRlMWFjM2JhYTQ5MWRmMGQzZWRjNTRjODU2YjIwYjUucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxNDE3MToiPD9waHAgJF9fZW52LT5zdGFydFNlY3Rpb24oJ3RpdGxlJywnUHJlc3VwdWVzdG8nKTsgPz4KPD9waHAgJF9fZW52LT5zdGFydFNlY3Rpb24oJ2NvbnRlbnQnKTsgPz4KPCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVzIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPHRpdGxlPkNsaWVudGUgUHJlc3VwdWVzdG88L3RpdGxlPgogICAgPGxpbmsgaHJlZj0iPD9waHAgZWNobyBhc3NldCgnY3NzL3ByZXN1cHVlc3RvLmNzcycpOyA/PiIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMy42LjAvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvanF1ZXJ5LXZhbGlkYXRlLzEuMTkuMy9qcXVlcnkudmFsaWRhdGUubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9qcXVlcnktdmFsaWRhdGUvMS4xOS4zL2FkZGl0aW9uYWwtbWV0aG9kcy5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iPD9waHAgZWNobyBhc3NldCgnanMvdGFyamV0YS5qcycpOyA/PiI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSI8P3BocCBlY2hvIGFzc2V0KCdqcy9sb2dpbi5qcycpOyA/PiI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSI8P3BocCBlY2hvIGFzc2V0KCdqcy9yZWdpc3Rlci5qcycpOyA/PiI+PC9zY3JpcHQ+Cgo8L2hlYWQ+Cjxib2R5PgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgoKICAgICAgICAgICAgPD9waHAgaWYoXFNlc3Npb246OmhhcygnZXJyb3InKSk6ID8+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWRhbmdlciI+PD9waHAgZWNobyBlKFxTZXNzaW9uOjpnZXQoJ2Vycm9yJykpOyA/PjwvZGl2PgogICAgICAgICAgICA8P3BocCBlbmRpZjsgPz4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1sZy0zIj4KICAgICAgICAgICAgICAgIDxoMT48P3BocCBlY2hvIGUoJGRhdG9zWydjb2NoZSddWzBdLT5tYXJjYSk7ID8+IDw/cGhwIGVjaG8gZSgkZGF0b3NbJ2NvY2hlJ11bMF0tPm1vZGVsbyk7ID8+PC9oMT4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvc3RvcmFnZS88P3BocCBlY2hvIGUoJGRhdG9zWydjb2NoZSddWzBdLT5pbWFnZW4pOyA/PiIgY2xhc3M9ImltZy1mbHVpZCIgYWx0PSJpbWFnZSI+CiAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im10LTMgbXMtMyI+UmVjb2dpZGE6IDw/cGhwIGVjaG8gZSgkZGF0b3NbJ3N1Y3Vyc2FsJ10pOyA/PiA8YnI+RmVjaGE6IDw/cGhwIGVjaG8gZShkYXRlKCdkIE0gWSBIOmknLCBzdHJ0b3RpbWUoJGRhdG9zWydyZWNvZ2lkYSddKSkpOyA/PjwvaDY+CiAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im10LTMgbXMtMyI+RGV2b2x1Y2nDs246IDw/cGhwIGVjaG8gZSgkZGF0b3NbJ3N1Y3Vyc2FsJ10pOyA/PiA8YnI+RmVjaGE6IDw/cGhwIGVjaG8gZShkYXRlKCdkIE0gWSBIOmknLCBzdHJ0b3RpbWUoJGRhdG9zWydkZXZvbHVjaW9uJ10pKSk7ID8+PC9oNj4KICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibXQtMyBtcy0zIj5UYXJpZmE6IDw/cGhwIGVjaG8gZSgkZGF0b3NbJ2NvY2hlJ11bMF0tPnByZWNpbyk7ID8+PC9oNj4KICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibXQtMyBtcy0zIj5GZWNoYSBkZWwgY29udHJhdG86IDw/cGhwIGVjaG8gZShkYXRlKCdkIE0gWScsIHN0cnRvdGltZSgkZGF0b3NbJ2NvbnRyYXRvJ10pKSk7ID8+PC9oNj4KICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibXQtMyBtcy0zIj5GaWFuemE6IDUwMOKCrDwvaDY+CiAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im10LTMgbXMtMyI+UHJlY2lvIGZpbmFsOiA8P3BocCBlY2hvIGUoJGRhdG9zWydwcmVjaW9Ub3RhbCddKTsgPz7igqw8L2g1PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1sZy05Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1sZy0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJvcmRlciBib3JkZXItZGFyayByb3VuZGVkLTMgbS00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtcy0zIG10LTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlY2liZSBsbGVubyBlbCBkZXDDs3NpdG8geSBlbnRyw6lnYWxvIGxsZW5vIGEgbGEgZGV2b2x1Y2nDs24uIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZWd1cm8gZGUgb2N1cGFudGVzIGRlbCB2ZWjDrWN1bG8uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvYmVydHVyYSBiw6FzaWNhIGRlIGRhw7FvcyBjb24gZnJhbnF1aWNpYSAoQ0RXKS4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSVZBIGluY2x1aWRvCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8P3BocCBpZihzZXNzaW9uKCktPmdldCgndGlwbycpPT0nZW1wbGVhZG8nKTogPz4KICAgICAgICAgICAgICAgICAgICA8aDEgY2xhc3M9InRleHQtY2VudGVyIG0tNSI+Q2llcnJlIHNlc2nDs24gY29tbyBlbXBsZWFkbzwvaDE+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgZW5kaWY7ID8+CiAgICAgICAgICAgICAgICAgICAgPCEtLWVzdGEgcmVnaXN0cmFkbyAtLT4KICAgICAgICAgICAgICAgICAgICA8P3BocCBpZihzZXNzaW9uKCktPmdldCgndGlwbycpPT0nY2xpZW50ZScpOiA/PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbGctMTIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYm9yZGVyIGJvcmRlci1kYXJrIHJvdW5kZWQtMyBtLTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJtcy0zIG10LTMiPkltcG9ydGU6IDw/cGhwIGVjaG8gZSgkZGF0b3NbJ3ByZWNpb1RvdGFsJ10pOyA/PuKCrDwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBpZD0icGFnYSIgbWV0aG9kPSJwb3N0IiBhY3Rpb249Ii9jbGllbnRlL3BhZ28iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGVjaG8gY3NyZl9maWVsZCgpOyA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBmb3JtLWZsb2F0aW5nIGctMiBtcy0zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJwcy00Ij5EYXRvcyBkZSBsYSB0YXJqZXRhPC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1sZy03IHAtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWZsb2F0aW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InRpdHVsYXIiIG5hbWU9InRpdHVsYXIiIHBsYWNlaG9sZGVyPSJ0aXR1bGFyIiByZXF1aXJlZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ0aXR1bGFyIj5UaXR1bGFyPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBtdC0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9Im5UYXJqZXRhIiBuYW1lPSJuVGFyamV0YSIgcGxhY2Vob2xkZXI9Im5UYXJqZXRhIiByZXF1aXJlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Im5UYXJqZXRhIj5OwrogVGFyamV0YTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWZsb2F0aW5nIGNvbC0xMiBjb2wtbGctNCBtdC0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InNlZ3VyaWRhZCIgbmFtZT0ic2VndXJpZGFkIiBwbGFjZWhvbGRlcj0ic2VndXJpZGFkIiByZXF1aXJlZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWd1cmlkYWQiPkNWVjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbGctNSBwLTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IGctMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2PkNhZHVjaWRhZDo8L2g2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgbXQtMiBjb2wtMTIgY29sLWxnLTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImRkIiBuYW1lPSJkZCIgcGxhY2Vob2xkZXI9ImRkIiByZXF1aXJlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJkZCI+ZGQ8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgbXQtMiBjb2wtMTIgY29sLWxnLTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9Ik1NIiBuYW1lPSJNTSIgcGxhY2Vob2xkZXI9Ik1NIiByZXF1aXJlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJNTSI+TU08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0idy0xMDAgYnRuIGJ0bi1sZyBidG4tcHJpbWFyeSBtdC0yIiB2YWx1ZT0iUmVhbGl6YXIgUGFnbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgZW5kaWY7ID8+CgogICAgICAgICAgICAgICAgICAgIDwhLS1ObyBlc3RhIHJlZ2lzdHJhZG8gdGVuZHJhIHF1ZSBpbmljaWFyIHNlc2lvbiB1IHJlZ2lzdHJhcnNlIC0tPgogICAgICAgICAgICAgICAgICAgIDw/cGhwIGlmKHNlc3Npb24oKS0+Z2V0KCd0aXBvJykhPSdjbGllbnRlJyAmJiBzZXNzaW9uKCktPmdldCgndGlwbycpIT0nZW1wbGVhZG8nKTogPz4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8IS0tTG9naW4gLS0+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1sZy00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYm9yZGVyIGJvcmRlci1kYXJrIHJvdW5kZWQtMyBtLTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgY29udGFpbmVyIGJnLXNlY29uZGFyeSBwLTIgdGV4dC1kYXJrIGJnLW9wYWNpdHktNTAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iaDUgbWItMyBmdy1ub3JtYWwgdGV4dC13aGl0ZSI+wr9UaWVuZXMgeWEgdW5hIGN1ZW50YT88L2g1PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iaDUgbWItMyBmdy1ub3JtYWwgdGV4dC13aGl0ZSI+SW5pY2lhciBzZXNpw7NuPC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDw/cGhwIGlmKFxTZXNzaW9uOjpoYXMoJ2Vycm9yJykpOiA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWRhbmdlciI+PD9waHAgZWNobyBlKFxTZXNzaW9uOjpnZXQoJ2Vycm9yJykpOyA/PjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGVuZGlmOyA/PiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBpZD0ibG9naW5DbGllbnRlIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL2NsaWVudGUvbG9naW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvIGNzcmZfZmllbGQoKTsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZW1haWwiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJlbWFpbCIgbmFtZT0iZW1haWwiIHBsYWNlaG9sZGVyPSJuYW1lQGV4YW1wbGUuY29tIiByZXF1aXJlZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImVtYWlsIj5Db3JyZW88L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBtdC0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJwYXNzd29yZCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCIgcGxhY2Vob2xkZXI9IlBhc3N3b3JkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InBhc3N3b3JkIj5Db250cmFzZcOxYTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0idy0xMDAgYnRuIGJ0bi1sZyBidG4tcHJpbWFyeSBtdC0yIiB2YWx1ZT0iSW5pY2lhciBzZXNpw7NuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbWFpbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwhLS1yZWdpc3RybyAtLT4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLWxnLTgiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJib3JkZXIgYm9yZGVyLWRhcmsgcm91bmRlZC0zIG0tNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBjb250YWluZXIgYmctc2Vjb25kYXJ5IHAtMiB0ZXh0LWRhcmsgYmctb3BhY2l0eS01MCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJoNSBtYi0zIGZ3LW5vcm1hbCB0ZXh0LXdoaXRlIj7Cv1RvZGF2w61hIHNpbiB1bmEgY3VlbnRhPzwvaDU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJoNSBtYi0zIGZ3LW5vcm1hbCB0ZXh0LXdoaXRlIj5SZWdpc3RyYXRlIHlhPC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDw/cGhwIGlmKFxTZXNzaW9uOjpoYXMoJ2Vycm9yJykpOiA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWRhbmdlciI+PD9waHAgZWNobyBlKFxTZXNzaW9uOjpnZXQoJ2Vycm9yJykpOyA/PjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGVuZGlmOyA/PiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBpZD0icmVnaXN0cm9DbGllbnRlIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL2NsaWVudGUvcmVnaXN0ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBlY2hvIGNzcmZfZmllbGQoKTsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgZWNobyBtZXRob2RfZmllbGQoJ1BVVCcpOyA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWZsb2F0aW5nIHJvdyBnLTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBtdC0yIGNvbC0xMiBjb2wtbGctNCAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0ibmFtZSIgbmFtZT0ibmFtZSIgcGxhY2Vob2xkZXI9Im5hbWUiIHJlcXVpcmVkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Im5hbWUiIGNsYXNzPSJtZS0zIj5Ob21icmU8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWZsb2F0aW5nIG10LTIgY29sLTEyIGNvbC1sZy04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImFwZWxsaWRvcyIgbmFtZT0iYXBlbGxpZG9zIiBwbGFjZWhvbGRlcj0iYXBlbGxpZG9zIiByZXF1aXJlZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJhcGVsbGlkb3MiPkFwZWxsaWRvczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgbXQtMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZW1haWwiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJlbWFpbCIgbmFtZT0iZW1haWwiIHBsYWNlaG9sZGVyPSJuYW1lQGV4YW1wbGUuY29tIiByZXF1aXJlZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImVtYWlsIj5Db3JyZW88L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBtdC0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJwYXNzd29yZCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCIgcGxhY2Vob2xkZXI9IlBhc3N3b3JkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InBhc3N3b3JkIj5Db250cmFzZcOxYTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWZsb2F0aW5nIG10LTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0icGFzc3dvcmRDb25maXJtIiBuYW1lPSJwYXNzd29yZENvbmZpcm0iIHBsYWNlaG9sZGVyPSJQYXNzd29yZENvbmZpcm0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icGFzc3dvcmRDb25maXJtIj5Db25maXJtYXIgQ29udHJhc2XDsWE8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyByb3cgZy0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgY29sLTEyIGNvbC1sZy02IG10LTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iZG5pIiBuYW1lPSJkbmkiIHBsYWNlaG9sZGVyPSJkbmkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImRuaSI+RE5JPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBjb2wtMTIgY29sLWxnLTYgbXQtMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InRlbGVmb25vIiBuYW1lPSJ0ZWxlZm9ubyIgcGxhY2Vob2xkZXI9InRlbGVmb25vIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ0ZWxlZm9ubyI+VGVsZWZvbm88L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBjb2wtMTIgY29sLWxnLTQgbXQtMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJwYWlzIiBuYW1lPSJwYWlzIiBwbGFjZWhvbGRlcj0icGFpcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icGFpcyI+UGFpczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgY29sLTEyIGNvbC1sZy04IG10LTIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InByb3ZpbmNpYSIgbmFtZT0icHJvdmluY2lhIiBwbGFjZWhvbGRlcj0icHJvdmluY2lhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJwcm92aW5jaWEiPlByb3ZpbmNpYTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgY29sLTEyIGNvbC1sZy03IG10LTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iY2l1ZGFkIiBuYW1lPSJjaXVkYWQiIHBsYWNlaG9sZGVyPSJjaXVkYWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImNpdWRhZCI+Q2l1ZGFkPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBjb2wtMTIgY29sLWxnLTUgbXQtMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImNwIiBuYW1lPSJjcCIgcGxhY2Vob2xkZXI9ImNwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJjcCI+Q8OzZGlnbyBQb3N0YWw8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWZsb2F0aW5nICBtdC0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImNhbGxlIiBuYW1lPSJjYWxsZSIgcGxhY2Vob2xkZXI9ImNhbGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJjYWxsZSI+RGlyZWNjacOzbjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJtdC0yIHctMTAwIGJ0biBidG4tbGcgYnRuLXByaW1hcnkiIHZhbHVlPSJSZWdpc3RyYXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgZW5kaWY7ID8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgo8P3BocCAkX19lbnYtPnN0b3BTZWN0aW9uKCk7ID8+Cjw/cGhwIGVjaG8gJF9fZW52LT5tYWtlKCdsYXlvdXRzLm1hc3RlckNsaWVudGUnLCBcSWxsdW1pbmF0ZVxTdXBwb3J0XEFycjo6ZXhjZXB0KGdldF9kZWZpbmVkX3ZhcnMoKSwgWydfX2RhdGEnLCAnX19wYXRoJ10pKS0+cmVuZGVyKCk7ID8+PD9waHAgLyoqUEFUSCAvdmFyL3d3dy9odG1sL2xhcmF2ZWwvcHJveWVjdG8taW50ZWdyYWRvLTMvcmVzb3VyY2VzL3ZpZXdzL2NsaWVudGUvcHJlc3VwdWVzdG8uYmxhZGUucGhwIEVORFBBVEgqKi8gPz4iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";