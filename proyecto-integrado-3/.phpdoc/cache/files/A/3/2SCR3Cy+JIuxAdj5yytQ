1686964688
waR3U4bTeM%3A2e4845a8dfdcf335122310fa480d057c-2c54aa893b888c48d3ff1c5fd7a1914a
s:7696:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjJjNTRhYTg5M2I4ODhjNDhkM2ZmMWM1ZmQ3YTE5MTRhIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjU6ImNsaWVudGVSZWdpc3Rlci5ibGFkZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo0NjoicmVzb3VyY2VzL3ZpZXdzL2F1dGgvY2xpZW50ZVJlZ2lzdGVyLmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NDgzMjoiQGV4dGVuZHMoJ2xheW91dHMubWFzdGVyQ2xpZW50ZScpCkBzZWN0aW9uKCd0aXRsZScsJ1JlZ2lzdGVyJykKQHNlY3Rpb24oJ2NvbnRlbnQnKQo8IURPQ1RZUEUgaHRtbD4KPGh0bWw+Cgo8aGVhZD4KICAgIDx0aXRsZT5SZWdpc3RlciBDbGllbnRlPC90aXRsZT4KICAgIDxsaW5rIGhyZWY9InshISBhc3NldCgnY3NzL3JlZ2lzdGVyLmNzcycpICEhfSIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMy42LjAvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvanF1ZXJ5LXZhbGlkYXRlLzEuMTkuMy9qcXVlcnkudmFsaWRhdGUubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9qcXVlcnktdmFsaWRhdGUvMS4xOS4zL2FkZGl0aW9uYWwtbWV0aG9kcy5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ieyEhIGFzc2V0KCdqcy9yZWdpc3Rlci5qcycpICEhfSI+PC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgogICAgCjxkaXYgY2xhc3M9ImNvbnRhaW5lciBtdC0zIj4KCjwvZGl2PgogICAgPG1haW4gY2xhc3M9ImZvcm0tc2lnbmluIj4KICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBjb250YWluZXIgYmctc2Vjb25kYXJ5IHAtMiB0ZXh0LWRhcmsgYmctb3BhY2l0eS01MCI+CiAgICAgICAgICAgIDxoMSBjbGFzcz0idGV4dC1kZWNvcmF0aW9uLXVuZGVybGluZSB0ZXh0LXdoaXRlIj5UaXR1bG88L2gxPjxicj4KICAgICAgICAgICAgPGgxIGNsYXNzPSJoMyBtYi0zIGZ3LW5vcm1hbCB0ZXh0LXdoaXRlIj5SZWdpc3RyYXRlPC9oMT4KICAgICAgICAgICAgQGlmKFxTZXNzaW9uOjpoYXMoJ2Vycm9yJykpCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWRhbmdlciI+e3sgXFNlc3Npb246OmdldCgnZXJyb3InKSB9fTwvZGl2PgogICAgICAgICAgICBAZW5kaWYKICAgICAgICAgICAgPGZvcm0gaWQ9InJlZ2lzdHJvQ2xpZW50ZSIgbWV0aG9kPSJwb3N0IiBhY3Rpb249Ii9jbGllbnRlL3JlZ2lzdGVyIj4KICAgICAgICAgICAgICAgIEBjc3JmCiAgICAgICAgICAgICAgICBAbWV0aG9kKCdQVVQnKQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyByb3cgZy0yIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWZsb2F0aW5nIG10LTIgY29sLTEyIGNvbC1sZy00ICI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0ibmFtZSIgbmFtZT0ibmFtZSIgcGxhY2Vob2xkZXI9Im5hbWUiIHJlcXVpcmVkPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJuYW1lIiBjbGFzcz0ibWUtMyI+Tm9tYnJlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWZsb2F0aW5nIG10LTIgY29sLTEyIGNvbC1sZy04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJhcGVsbGlkb3MiIG5hbWU9ImFwZWxsaWRvcyIgcGxhY2Vob2xkZXI9ImFwZWxsaWRvcyIgcmVxdWlyZWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImFwZWxsaWRvcyI+QXBlbGxpZG9zPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgbXQtMiI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iZW1haWwiIG5hbWU9ImVtYWlsIiBwbGFjZWhvbGRlcj0ibmFtZUBleGFtcGxlLmNvbSIgcmVxdWlyZWQ+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZW1haWwiPkNvcnJlbzwvbGFiZWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgbXQtMiI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0icGFzc3dvcmQiIG5hbWU9InBhc3N3b3JkIiBwbGFjZWhvbGRlcj0iUGFzc3dvcmQiPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InBhc3N3b3JkIj5Db250cmFzZcOxYTwvbGFiZWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgbXQtMiI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0icGFzc3dvcmRDb25maXJtIiBuYW1lPSJwYXNzd29yZENvbmZpcm0iIHBsYWNlaG9sZGVyPSJQYXNzd29yZENvbmZpcm0iPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InBhc3N3b3JkQ29uZmlybSI+Q29uZmlybWFyIENvbnRyYXNlw7FhPC9sYWJlbD4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgcm93IGctMiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBjb2wtMTIgY29sLWxnLTYgbXQtMyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iZG5pIiBuYW1lPSJkbmkiIHBsYWNlaG9sZGVyPSJkbmkiPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJkbmkiPkROSTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBjb2wtMTIgY29sLWxnLTYgbXQtMyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJ0ZWxlZm9ubyIgbmFtZT0idGVsZWZvbm8iIHBsYWNlaG9sZGVyPSJ0ZWxlZm9ubyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InRlbGVmb25vIj5UZWxlZm9ubzwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgY29sLTEyIGNvbC1sZy00IG10LTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InBhaXMiIG5hbWU9InBhaXMiIHBsYWNlaG9sZGVyPSJwYWlzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icGFpcyI+UGFpczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1mbG9hdGluZyBjb2wtMTIgY29sLWxnLTggbXQtMiAiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InByb3ZpbmNpYSIgbmFtZT0icHJvdmluY2lhIiBwbGFjZWhvbGRlcj0icHJvdmluY2lhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icHJvdmluY2lhIj5Qcm92aW5jaWE8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgY29sLTEyIGNvbC1sZy03IG10LTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImNpdWRhZCIgbmFtZT0iY2l1ZGFkIiBwbGFjZWhvbGRlcj0iY2l1ZGFkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iY2l1ZGFkIj5DaXVkYWQ8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgY29sLTEyIGNvbC1sZy01IG10LTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iY3AiIG5hbWU9ImNwIiBwbGFjZWhvbGRlcj0iY3AiPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJjcCI+Q8OzZGlnbyBQb3N0YWw8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZmxvYXRpbmcgIG10LTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImNhbGxlIiBuYW1lPSJjYWxsZSIgcGxhY2Vob2xkZXI9ImNhbGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iY2FsbGUiPkRpcmVjY2nDs248L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CgoKICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJtdC0yIHctMTAwIGJ0biBidG4tbGcgYnRuLXByaW1hcnkiIHZhbHVlPSJSZWdpc3RyYXRlIj4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtdC01IG1iLTMiPiZjb3B5OyAyMDIyPC9wPgogICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgPC9kaXY+CiAgICA8L21haW4+CjwvYm9keT4KCjwvaHRtbD4KQGVuZHNlY3Rpb24iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";